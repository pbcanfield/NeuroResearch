load_file("CA3.hoc")

//simuation constants
SIMRUNTIME = 1500
DELAY = 500
INJTIME = 500
I_INJ = 0.2

tstop = SIMRUNTIME
v_init = -75

objectvar membrane_voltage, time
membrane_voltage = new Vector()
time = new Vector()
objref sahpi, napi, nati, kdri, hi, capi
sahpi = new Vector()
napi = new Vector()
nati = new Vector()
kdri = new Vector()
hi = new Vector()
capi= new Vector()



objectvar cell
cell = new CA3Cell()

sahpi.record(&cell.soma.i_sAHP)
napi.record(&cell.soma.i_nap)
nati.record(&cell.soma.i_natCA3)
kdri.record(&cell.soma.i_kdrCA3)
hi.record(&cell.soma.i_hdCA3)
capi.record(&cell.soma.xx_capool)



//record the cells membrane voltage.
membrane_voltage.record(&cell.soma.v(0.5))
time.record(&t)

//First graph the membrane potential vs time plot.

//Create a current clamp.
objectvar i_inj
cell.soma i_inj = new IClamp(0.5)
i_inj.del = DELAY
i_inj.dur = INJTIME
i_inj.amp = I_INJ

//run the simulation and plot the outcome
run()

//Membrane voltage vs. time
objectvar g_mvt
g_mvt = new Graph()
g_mvt.size(0,SIMRUNTIME, 30, -90)
g_mvt.vector(membrane_voltage.size(), &time.x[0], &membrane_voltage.x[0])
g_mvt.flush()

objref g_ivt
g_ivt = new Graph()
g_ivt.size(0, SIMRUNTIME, 0.04, -0.05)
g_ivt.color(2)
g_ivt.label("Red - sAHP current")
g_ivt.vector(sahpi.size(), &time.x[0], &sahpi.x[0])
g_ivt.color(3)
g_ivt.label("Blue - capool")
g_ivt.vector(capi.size(), &time.x[0], &capi.x[0])
g_ivt.color(4)
g_ivt.label("Green - nap")
g_ivt.vector(napi.size(), &time.x[0], &napi.x[0])
g_ivt.color(5)
g_ivt.label("Orange - nat")
g_ivt.vector(nati.size(), &time.x[0], &nati.x[0])
g_ivt.color(7)
g_ivt.label("Purple - kdr")
g_ivt.vector(kdri.size(), &time.x[0], &kdri.x[0])



g_ivt.flush()

objref nc, nil, spvec
func runSim(){


    cell.soma nc = new NetCon(&v(0.5),nil)
	nc.threshold = 0
    spvec = new Vector()
    nc.record(spvec)

    i_inj.amp=$1

    run()

    return (spvec.size() / (INJTIME)) * 1000
}

printf("Cell fi at %f nA injection: %f\n",I_INJ,runSim(I_INJ))

