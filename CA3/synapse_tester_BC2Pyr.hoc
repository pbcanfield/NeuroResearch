//################################################################//
//# GUI Built using BMTools (https://github.com/tjbanks/bmtools) #//
//# Tyler Banks (tyler@tylerbanks.net)                           #//
//# Neural Engineering Laboratory (Prof. Satish Nair)            #//
//# University of Missouri, Columbia                             #//
//# Build time: 07/02/2020 23:59:20                              #//
//################################################################//

{load_file("stdrun.hoc")}
{load_file("nrngui.hoc")}

//Loading mechanisms in other folder
//nrn_load_dll("./biophys_components/mechanisms/x86_64/.libs/libnrnmech.so")
//nrn_load_dll("./biophys_components/mechanisms/nrnmech.dll")

// Load Template(s) (some may not be needed if a folder was specified and may cause problems, remove as needed)
{load_file("CA3.hoc")}

tstop = 250
v_init = -75
objref Cell // declare the primary cell object
Cell = new CA3Cell() // build the neuron from template

NumClamps = 0
NumStims = 1
NumNetcons = 1
NumSynapses = 1
NumOtherCells = 0
NumVClamps = 1

//objref ccl[NumClamps]
objref stim[NumStims]
objref nc[NumNetcons]
objref syn[NumSynapses]
//objref auxcell[NumOtherCells]
objref vclamp[NumVClamps]

strdef tstr0, tstr1,tstr2,tstr3

//Window 1 variables
strdef Window1BoxTitle
Window1SubVBoxNum = 2
objref Window1HBoxObj,Window1SubVBoxObj[Window1SubVBoxNum]


Cell.soma syn[0] = new inter2pyr(0.5) // build a synapse input into Cell
syn[0].AlphaTmax_gabaa = 4.67
syn[0].Beta_gabaa = 0.3
syn[0].Cdur_gabaa = 0.3
syn[0].gbar_gabaa = 0.0017
syn[0].Erev_gabaa = -85
syn[0].AlphaTmax_gabab = 0.09
syn[0].Beta_gabab = 0.008
syn[0].Cdur_gabab = 6
syn[0].gbar_gabab = 0.0017
syn[0].Erev_gabab = -85
syn[0].initW = 3
syn[0].Wmax = 2
syn[0].Wmin = 0.25
syn[0].lambda1 = 2.5
syn[0].lambda2 = 0.01
syn[0].threshold1 = 0.1
syn[0].threshold2 = 0.3
syn[0].tauD1 = 300
syn[0].d1 = 0.7
syn[0].tauD2 = 1
syn[0].d2 = 1
syn[0].tauF = 1
syn[0].f = 1
syn[0].bACH = 0
syn[0].aDA = 1
syn[0].bDA = 0
syn[0].wACH = 0


stim[0]=new NetStim(0.5)
stim[0].interval=10 // ms (mean) time between spikes
stim[0].number=10 //(average) number of spikes
stim[0].start=50 // ms (most likely) start time of first spike
stim[0].noise=0.0 // range 0 to 1. Fractional randomness.
nc[0]=new NetCon(stim[0],syn[0],0,0,1.0)

Cell.soma vclamp[0] = new SEClamp(0.5)
vclamp[0].amp1 = 0
vclamp[0].dur1 = 999

proc DisplayWindow1() { local i

    Window1BoxTitle = "CA3PyramidalCell - BMTools Single Cell Tuner"
    Window1HBoxObj = new HBox()
    for i=0,Window1SubVBoxNum-1 Window1SubVBoxObj[i] = new VBox()

    // Column1
    Window1SubVBoxObj[0].intercept(1)
    
        // Widget0
        newPlot(0,250,-64.09,-64.065)
        graphItem.save_name("graphList[0].")
        graphList[0].append(graphItem)
        sprint(tstr1,"%s.soma.v(0.5)","Cell")
        graphItem.addexpr(tstr1,1,1)
        
        // Widget1
        newPlot(0,250,-0.03,0)
        graphItem.save_name("graphList[0].")
        graphList[0].append(graphItem)
        sprint(tstr1,"syn[0].i_gabaa")
        graphItem.addexpr(tstr1,1,1)
        
        // Widget2
        nrncontrolmenu()
    Window1SubVBoxObj[0].intercept(0)

    // Column2
    Window1SubVBoxObj[1].intercept(1)
        // Widget1
        nrnpointmenu(syn[0])
        // Widget2
        nrnpointmenu(stim[0])
    Window1SubVBoxObj[1].intercept(0)

    Window1HBoxObj.intercept(1)
        for i=0,Window1SubVBoxNum-1 Window1SubVBoxObj[i].map()
    Window1HBoxObj.intercept(0)
    Window1HBoxObj.map(Window1BoxTitle,0,0,1100,600)

}// end DisplayWindow1()


DisplayWindow1()
