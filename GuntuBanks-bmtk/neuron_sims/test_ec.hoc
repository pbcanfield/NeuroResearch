{load_file("nrngui.hoc")}
nrn_load_dll("../biophys_components/mechanisms/modfiles/nrnmech.dll")
{load_file("../biophys_components/hoc_templates/Template.hoc")}

// main.hoc

tstop = 1000
v_init = -65
celsius = 6

objref CellA // declare neuron object
objref syn[1]
objref nc[1]
CellA = new IzhiCell_EC2() // build neuron from template
// for stimulating it using current injection
objref ccl
//CellA.soma ccl = new IClamp(.5)
//ccl.del = 50
//ccl.dur = 900
//ccl.amp = 3

// for stimulating it using a synapse
CellA.soma syn[0] = new pyr2pyr(0) // build a synapse input into CellA
syn[0].initW = 15
syn[0].Wmax = 15

objref nstim // the code below provides cellA with a spike train
nstim=new NetStim(0.5)
nstim.interval=1000/15 //15hz // ms (mean) time between spikes
nstim.number=100 //(average) number of spikes
nstim.start=100 // ms (most likely) start time of first spike
nstim.noise=0 // range 0 to 1. Fractional randomness.
nc[0]=new NetCon(nstim,syn[0],0,0,1)


strdef MainBoxTitle
MainBoxTitle = "Banks"
SubVBoxNum = 3
SubDeckNum = 2
objref MainHBoxObj,SubVBoxObj[SubVBoxNum]
objref SubDeckObj[SubDeckNum]

strdef tstr0, tstr1,tstr2,tstr3

proc Plot1V() {
	sprint(tstr1,"%s.soma.v(.5)",$s1)
	newPlot(0,tstop,-80,60)
	graphItem.save_name("graphList[0].")
	graphList[0].append(graphItem)
	graphItem.addexpr(tstr1,3,1)
	
	sprint(tstr1,"%s.soma.v",$s1)
	sprint(tstr2,"tstr3 = units(&%s)",tstr1)
	execute(tstr2)
	sprint(tstr1, "%s Voltage (%s)",$s1, tstr3)
	graphItem.label(.08,.925,tstr1)
}

proc allInOneBoxSomaSynapseSingle() { local i

	MainBoxTitle = "EC Test"
	MainHBoxObj = new HBox()
	for i=0,SubVBoxNum-1 SubVBoxObj[i] = new VBox()
	for i=0,SubDeckNum-1 SubDeckObj[i] = new Deck()
	
	SubDeckObj[0].intercept(1)
		xpanel(" ")
			xlabel("----PLOTS IN THE LEFT PANEL----")
		xpanel(0)
	SubDeckObj[0].intercept(0)
	SubDeckObj[1].intercept(1)
		
	SubDeckObj[1].intercept(0)
	//////// SubVBoxes ////////
	SubVBoxObj[0].intercept(1)
		Plot1V($s1)
	SubVBoxObj[0].intercept(0)
	
	SubVBoxObj[1].intercept(1)
		$o2.soma nrnsecmenu(.5,1)
	SubVBoxObj[1].intercept(0)
	
	SubVBoxObj[2].intercept(1)
		nrncontrolmenu()
		nrnpointmenu($o4)
		nrnpointmenu($o5)
	SubVBoxObj[2].intercept(0)
	
	MainHBoxObj.intercept(1)
		for i=0,SubVBoxNum-1 SubVBoxObj[i].map()
	MainHBoxObj.intercept(0)
	MainHBoxObj.map(MainBoxTitle,0,0,1000,600)
}

allInOneBoxSomaSynapseSingle("CellA", CellA, ccl, syn[0],nstim)